{"version":3,"file":"http.js","sourceRoot":"","sources":["../../src/test-server/http.ts"],"names":[],"mappings":";;;AAAA,+BAAoC;AACpC,2BAAsC;AACtC,6BAA0B;AAEb,QAAA,MAAM,GAAG,mBAAY,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;;IAC9C,MAAM,GAAG,GAAG,IAAI,SAAG,CAAC,MAAA,GAAG,CAAC,GAAG,mCAAI,EAAE,EAAE,kBAAkB,CAAC,CAAC;IAEvD,IAAI,GAAG,CAAC,QAAQ,KAAK,OAAO,EAAE;QAC5B,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;YACtD,IAAI,KAAK;gBAAE,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SACtC;QACD,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACd,OAAO;KACR;IAED,IAAI,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;QACtC,GAAG,CAAC,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAChD,GAAG,CAAC,GAAG,EAAE,CAAC;QACV,OAAO;KACR;IAED,IAAI,GAAG,CAAC,QAAQ,KAAK,UAAU,EAAE;QAC/B,qBAAgB,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC3C,OAAO;KACR;IAED,IAAI,GAAG,CAAC,QAAQ,KAAK,WAAW,EAAE;QAChC,GAAG,CAAC,SAAS,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;QACpC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAEpB,UAAU,CAAC;YACT,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YACpB,GAAG,CAAC,GAAG,EAAE,CAAC;QACZ,CAAC,EAAE,GAAG,CAAC,CAAC;QAER,OAAO;KACR;IAED,IAAI,GAAG,CAAC,QAAQ,KAAK,MAAM,EAAE;QAC3B,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,OAAO;KACR;IAED,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACnB,OAAO;AACT,CAAC,CAAC,CAAC","sourcesContent":["import { createServer } from \"http\";\nimport { createReadStream } from \"fs\";\nimport { URL } from \"url\";\n\nexport const server = createServer((req, res) => {\n  const url = new URL(req.url ?? \"\", \"http://localhost\");\n\n  if (url.pathname === \"/echo\") {\n    for (const [key, value] of Object.entries(req.headers)) {\n      if (value) res.setHeader(key, value);\n    }\n    req.pipe(res);\n    return;\n  }\n\n  if (/\\/status\\/\\d+/.test(url.pathname)) {\n    res.statusCode = Number(url.pathname.substr(8));\n    res.end();\n    return;\n  }\n\n  if (url.pathname === \"/urandom\") {\n    createReadStream(\"/dev/urandom\").pipe(res);\n    return;\n  }\n\n  if (url.pathname === \"/download\") {\n    res.setHeader(\"Content-Length\", 12);\n    res.write(\"hello \");\n\n    setTimeout(function () {\n      res.write(\"world!\");\n      res.end();\n    }, 200);\n\n    return;\n  }\n\n  if (url.pathname === \"/url\") {\n    res.end(req.url);\n    return;\n  }\n\n  res.end(\"Success\");\n  return;\n});\n"]}