{"version":3,"file":"http2.js","sourceRoot":"","sources":["../../src/test-server/http2.ts"],"names":[],"mappings":";;;AAAA,iCAAyD;AACzD,2BAAkC;AAClC,+BAA4B;AAEf,QAAA,MAAM,GAAG,oBAAY,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IAC9C,GAAG,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC;AAEU,QAAA,SAAS,GAAG,0BAAkB,CACzC;IACE,GAAG,EAAE,iBAAY,CAAC,WAAI,CAAC,SAAS,EAAE,wBAAwB,CAAC,CAAC;IAC5D,IAAI,EAAE,iBAAY,CAAC,WAAI,CAAC,SAAS,EAAE,wBAAwB,CAAC,CAAC;IAC7D,EAAE,EAAE,iBAAY,CAAC,WAAI,CAAC,SAAS,EAAE,oBAAoB,CAAC,CAAC;IACvD,UAAU,EAAE,IAAI;CACjB,EACD,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IACX,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC;IACrB,GAAG,CAAC,GAAG,CAAC,uBAAuB,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;AACpD,CAAC,CACF,CAAC","sourcesContent":["import { createServer, createSecureServer } from \"http2\";\nimport { readFileSync } from \"fs\";\nimport { join } from \"path\";\n\nexport const server = createServer((req, res) => {\n  res.end(\"Not using TLS\");\n});\n\nexport const tlsServer = createSecureServer(\n  {\n    key: readFileSync(join(__dirname, \"support/server-key.pem\")),\n    cert: readFileSync(join(__dirname, \"support/server-crt.pem\")),\n    ca: readFileSync(join(__dirname, \"support/ca-crt.pem\")),\n    allowHTTP1: true,\n  },\n  (req, res) => {\n    res.statusCode = 200;\n    res.end(`Using TLS over HTTP ${req.httpVersion}`);\n  }\n);\n"]}